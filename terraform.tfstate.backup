{
    "version": 3,
    "terraform_version": "0.11.2",
    "serial": 3,
    "lineage": "34a237c8-db53-47cc-a238-60f1413b429e",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_security_group.neito_security_group": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-03d204ad3ffc52a55",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:213904922708:security-group/sg-03d204ad3ffc52a55",
                            "description": "Port needed for developpement",
                            "egress.#": "0",
                            "id": "sg-03d204ad3ffc52a55",
                            "ingress.#": "0",
                            "name": "neito_security_group",
                            "owner_id": "213904922708",
                            "revoke_rules_on_delete": "true",
                            "tags.%": "0",
                            "vpc_id": "vpc-5665c03d"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.22_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-3931780703",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "Enables SSH.",
                            "from_port": "22",
                            "id": "sgrule-3931780703",
                            "protocol": "tcp",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.443_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-3637681556",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "Enables HTTPS",
                            "from_port": "443",
                            "id": "sgrule-3637681556",
                            "protocol": "tcp",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.80_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-1557162986",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "Enables HTTP.",
                            "from_port": "80",
                            "id": "sgrule-1557162986",
                            "protocol": "tcp",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.9000_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-1085514388",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "Enables Portainer",
                            "from_port": "9000",
                            "id": "sgrule-1085514388",
                            "protocol": "tcp",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "9000",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.9001_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-2727419543",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "Enables Jenkins",
                            "from_port": "9001",
                            "id": "sgrule-2727419543",
                            "protocol": "tcp",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "9001",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.internet_outbound": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.neito_security_group"
                    ],
                    "primary": {
                        "id": "sgrule-1275396353",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "0",
                            "id": "sgrule-1275396353",
                            "protocol": "-1",
                            "security_group_id": "sg-03d204ad3ffc52a55",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.ec2_cloud_init": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2bee6e5ea5b33e8d91587ed241445006dfce6c2c337d5eabfb1f8b647dcfca0b",
                        "attributes": {
                            "id": "2bee6e5ea5b33e8d91587ed241445006dfce6c2c337d5eabfb1f8b647dcfca0b",
                            "rendered": "#cloud-config\n\n# Make sure that the root partition fills the entire disk to prevent the return of the disk full issue.\ngrowpart:\n  mode: auto\n  devices: ['/']\n\nyum_repos:\n  docker:\n    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable\n    enabled: true\n    gpgcheck: true\n    gpgkey: https://download.docker.com/linux/centos/gpg\n    name: Docker CE Stable - $basearch\n\n# Update all the things\npackage_update: true\n\n# Install our packages to make docker work.\npackages:\n  - yum-utils\n  - device-mapper-persistent-data\n  - lvm2\n  - wget\n  - docker-ce\n  - zsh\n\n# Reboot to update the packages if needed. Makes sure the patches actually get applied.\npackage_reboot_if_required: true\n\n# Configure NTP like we should do! Using AWS magic IP address for NTP.\nntp:\n  enabled: true\n  ntp_client: chrony\n  servers:\n    - 169.254.169.123\n\n\nruncmd:\n- echo \"TP_Juillet\" \u003e /home/gecloud/.deploymentID\n- update-ca-trust\n- systemctl enable docker\n- systemctl start docker\n- docker network create the_network\n\noutput : { all : '| tee -a /var/log/cloud-init-runcmd.log' }",
                            "template": "#cloud-config\n\n# Make sure that the root partition fills the entire disk to prevent the return of the disk full issue.\ngrowpart:\n  mode: auto\n  devices: ['/']\n\nyum_repos:\n  docker:\n    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable\n    enabled: true\n    gpgcheck: true\n    gpgkey: https://download.docker.com/linux/centos/gpg\n    name: Docker CE Stable - $basearch\n\n# Update all the things\npackage_update: true\n\n# Install our packages to make docker work.\npackages:\n  - yum-utils\n  - device-mapper-persistent-data\n  - lvm2\n  - wget\n  - docker-ce\n  - zsh\n\n# Reboot to update the packages if needed. Makes sure the patches actually get applied.\npackage_reboot_if_required: true\n\n# Configure NTP like we should do! Using AWS magic IP address for NTP.\nntp:\n  enabled: true\n  ntp_client: chrony\n  servers:\n    - 169.254.169.123\n\n\nruncmd:\n- echo \"${deploymentID}\" \u003e /home/gecloud/.deploymentID\n- update-ca-trust\n- systemctl enable docker\n- systemctl start docker\n- docker network create the_network\n\noutput : { all : '| tee -a /var/log/cloud-init-runcmd.log' }",
                            "vars.%": "1",
                            "vars.deploymentID": "TP_Juillet"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
